Question: create model Job(posting date,location,offeredsalary,qualification) and perform CRUD op.  by using model Form.
===========================================================================================================================
models.py
from django.db import models

class Job(models.Model):
    posting_date = models.DateField()
    location = models.CharField(max_length=50)
    offered_salary = models.IntegerField()
    qualification = models.CharField(max_length=50)

-------------------------------------------------------------------------

forms.py   
from django import forms
from .models import Job

class JobDetails(forms.ModelForm):
    class Meta:
        model=Job
        fields=['posting_date','location','offered_salary','qualification']
        widgets={
            'posting_date':forms.DateInput(attrs={'class':'form-control'}),
            'location':forms.TextInput(attrs={'class':'form-control'}),
            'offered_salary':forms.NumberInput(attrs={'class':'form-control'}),
            'qualification':forms.TextInput(attrs={'class':'form-control'}),
        }

----------------------------------------------------------------------------
urls.py
from django.contrib import admin
from employee import views as vw

urlpatterns = [
    path('admin/', admin.site.urls),
    path('',vw.add_and_show, name="add_and_show"),
    path('delete/<int:id>/',vw.delete_data, name="delete_data"),
    path('<int:id>/',vw.update_data, name="updatedata"),
]

------------------------------------------------------------------------------

views.py
from django.shortcuts import render, HttpResponseRedirect
from .forms import JobDetails
from .models import Job

#this function will add and show the data
def add_and_show(request):
    if request.method=="POST":
        fm=JobDetails(request.POST)
        if fm.is_valid():
            fm.save()
            fm=JobDetails()
    else:
        fm=JobDetails()
    j=Job.objects.all()
    return render(request, 'add_show.html',{'form':fm,'job':j})

#this will edit/update
def update_data(request,id):
    if request.method=="POST":
        pi=Job.objects.get(pk=id)
        fm=JobDetails(request.POST, instance=pi)
        if fm.is_valid():
            fm.save()
    else:
        pi=Job.objects.get(pk=id)
        fm=JobDetails(instance=pi)
    return render(request,'updatejob.html', {'form':fm})

#this function will delete the data
def delete_data(request, id):
    if request.method=="POST":
        pi=Job.objects.get(pk=id)
        pi.delete()
        return HttpResponseRedirect('/')

-----------------------------------------------------------------------------------

add_show.html
  <div class="container-fluid">
    <div class='row'>
    <div class='col-sm-4'>
        <h3 class='text-center alert alert-info'>Add Detail</h3>  
        <form action="" method="POST" novalidate="">
        {{form.as_p}}
        <input type="submit" class="btn btn-success" value="Add">
        {% csrf_token %}
        </form>
    </div>

    <div class='col-sm-8'>
      <h2 class='text-center alert alert-info'>Show Job Detail</h2>
      {% if job %}
        <table class="table">
            <thead>
              <tr>
                <th scope="col">Id</th>
                <th scope="col">Posting Date</th>
                <th scope="col">Location</th>
                <th scope="col">Offered Salary</th>
                <th scope="col">Qualification</th>
                <th scope="col">Action</th>
              </tr>
            </thead>
            <tbody>
                {% for i in job  %}
                    <tr>
                    <th scope="row">{{i.id}}</th>    
                    <td>{{i.posting_date}}</td>
                    <td>{{i.location}}</td>
                    <td>{{i.offered_salary}}</td>
                    <td>{{i.qualification}}</td>
                    <td>
                    <a href="{% url 'updatedata' i.id  %}" class='btn btn-warning btn-sm'>Edit</a>
                    <form action="{% url 'delete_data' i.id %}" method="POST" class="d-inline">
                    {% csrf_token %}
                    <input type="submit" class="btn btn-danger" value="Delete">
                    </form>
                    </td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
      {% else %}
      <h4 class='text-center alert alert-info'>No Records<h4>
      {% endif %}
    </div>
</div>
</div>

---------------------------------------------------------------------------------------------------------

updatejob.html
  <div class="container-fluid">
    <div class='row '>
    <div class='col-sm-8 offsset-2'>
        <h4 class='text-center alert alert-info'>Update Student Information</h4>
        <form action="" method="POST">
        {{form.as_p}}
        {% csrf_token %}
        <input type="submit" class="btn btn-success" value="Update">
        <a href="{% url 'add_and_show' %}" class='btn btn-info'>Back to home</a>
        </form>
    </div>
</div>
</div>



